use Mix.Config

# For production, don't forget to configure the url host
# to something meaningful, Phoenix uses this information
# when generating URLs.
#
# Note we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the `mix phx.digest` task,
# which you should run after static files are built and
# before starting your production server.

# Do not print debug messages in production
config :logger, level: :info
config :atto_link,
  base_url: "https://teenielink.dev",
  origins: [~r{^https?://(.*\.?)teenielink\.dev}],
  free: "price_1H7wzpFiqLhwiC9fRNp7HFeB",
  basic: "price_1H7wzpFiqLhwiC9fKHf53SoJ",
  premium: "price_1H7wzqFiqLhwiC9f2S4jJS2b",
  enterprise: "price_1H7wzqFiqLhwiC9fbBAyCuVB"
# ## SSL Support
#
# To get SSL working, you will need to add the `https` key
# to the previous section and set your `:url` port to 443:
#
config :atto_link, AttoLinkWeb.Endpoint,
  url: [host: "api.teenielink.dev"],
  http: [ip: {127, 0, 0, 1}, port: {:system, "PORT"} || 4000]

config :atto_link,
       AttoLinkWeb.Endpoint,
       #       force_ssl: [hsts: true]
       #
       # Check `Plug.SSL` for all available options in `force_ssl`.

       # Finally import the config/prod.secret.exs which loads secrets
       # and configuration from environment variables.
       import_config("prod.secret.exs")

#
# The `cipher_suite` is set to `:strong` to support only the
# latest and more secure SSL ciphers. This means old browsers
# and clients may not be supported. You can set it to
# `:compatible` for wider support.
#
# `:keyfile` and `:certfile` expect an absolute path to the key
# and cert in disk or a relative path inside priv, for example
# "priv/ssl/server.key". For all supported SSL configuration
# options, see https://hexdocs.pm/plug/Plug.SSL.html#configure/1
#
# We also recommend setting `force_ssl` in your endpoint, ensuring
# no data is ever sent via http, always redirecting to https:
#
#
